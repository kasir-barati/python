services:
  app:
    build: 
      context: .
    env_file:
      - .env
    ports:
      - 8000:$APP_PORT
    command:
      [
        "uvicorn",
        "src.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "$APP_PORT",
        "--reload",
        "--log-level",
        "debug",
      ]

  rabbitmq:
    image: rabbitmq:3.9.20-management-alpine
    env_file:
      - .env
    ports:
      - $PGADMIN_EXPOSED_PORT:15672
    restart: always
    healthcheck:
      test: python3 -c "import urllib.request, sys; sys.exit(urllib.request.urlopen('http://localhost:15672').status != 200)"
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:17.0-alpine3.20
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgAdmin:
    image: dpage/pgadmin4:9.5.0
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - ${PGADMIN_EXPOSED_PORT}:80
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: preferences.json
        target: /pgadmin4/preferences.json

configs:
  preferences.json:
    content: |
      {
        "preferences": {
          "misc:themes:theme": "dark",
          "browser:display:show_system_objects": true,
          "browser:display:confirm_on_refresh_close": false,
          "browser:display:show_user_defined_templates": true
        }
      }
  servers.json:
    content: |
      {
        "Servers": {
          "1": {
            "Group": "Servers",
            "Name": "Database name",
            "Host": "postgres",
            "Port": 5432,
            "MaintenanceDB": "${POSTGRES_DB}",
            "Username": "${POSTGRES_USER}",
            "SSLMode": "prefer",
            "BGColor": "#FF4500",
            "FGColor": "#222222",
            "Comment": "This server will connect to the instance we've created in our compose file."
          }
        }
      }

